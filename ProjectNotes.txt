Working with git; cloning, creating new branch via git checkout -b "new-branch-name"


https://education.github.com/git-cheat-sheet-education.pdf

Weird stuff:
- Need to figure out why sometimes I can edit this ProjectNotes.txt file via VSCode and why it sometimes doesn't let me.

Things learned:
- When using VSCode: if you open the folder, and then clone from GitHub, the VSCode Source Control tab will not work until you open the cloned folder in VSCode.  It may be better to clone the GitHub repository in terminal first, and then open that folder in VSCode so that the Source Control in VSCode will already be set up.

- Gained experience troubleshooting: had the issue where I was running git init before cloning the GitHub repo.  This was causing a Git error where it was a nested Git repository.

- Commits, remote pull requests, and review process: Practiced creating a remote pull request to merge the modified branch into the main branch; practiced the review and comment process; found an error so made the correction comment, and corrected the code, and created a new commit with the update.

- Git branches after merge: Wasn't sure what to do with the old branch after it was merged into main; googled it; figured out how to delete the remote, but I couldn't delete local because it was checked out, had to checkout the main branch and then delete the old branch; created a new branch for the next task, but it didn't have the updated files, I had to go back to the main branch, and delete the branch I just created, and do a remote pull to update the local main branch, and then checkout a new branch.  I need to remember to always get the most current main branch from the remote after merging the new remote branch into the remote main branch.

- Realized branch names should follow the Kanban cards that Codecademy created for this project, that way it is easy for a team to know what the branches are for and what they do.

- Made the mistake of almost completing the entire project in the "AKS-CreateTheMessage". This would be a mistake because the branch should be specific to a task, bug, or feature. Limiting them will make it easier to review and manage multiple teams. Corrected this mistake by copying what I had for the next sections, and then commiting and processing the remote pull requests.